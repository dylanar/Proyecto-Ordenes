
package com.form;


import dbManager.DBManager;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

public class FormClientes extends javax.swing.JPanel {
    
    DefaultTableModel modelo;

    public FormClientes() {
        initComponents();
        rellenoTabla();
        tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }
    
 
   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        labelMenuClientes = new javax.swing.JLabel();
        panelDatos = new javax.swing.JPanel();
        labelCedula = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        tfCedula = new javax.swing.JTextField();
        tfNombre = new javax.swing.JTextField();
        labelTelefono = new javax.swing.JLabel();
        tfTelefono = new javax.swing.JTextField();
        btnCopiar = new javax.swing.JButton();
        labelTelefono1 = new javax.swing.JLabel();
        tfDireccion = new javax.swing.JTextField();
        panelOperaciones = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jScrollPane1.setViewportView(jEditorPane1);

        setBackground(new java.awt.Color(242, 242, 242));
        setPreferredSize(new java.awt.Dimension(915, 600));

        labelMenuClientes.setBackground(new java.awt.Color(255, 255, 255));
        labelMenuClientes.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        labelMenuClientes.setForeground(new java.awt.Color(51, 51, 51));
        labelMenuClientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMenuClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icon/8.png"))); // NOI18N
        labelMenuClientes.setText("Menu Clientes");

        panelDatos.setBackground(new java.awt.Color(242, 242, 242));
        panelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18))); // NOI18N
        panelDatos.setAlignmentX(1.0F);

        labelCedula.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelCedula.setText("Cédula:");

        labelNombre.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelNombre.setText("Nombre:");

        tfCedula.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCedulaActionPerformed(evt);
            }
        });

        tfNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        labelTelefono.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelTelefono.setText("Teléfono:");

        tfTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTelefonoActionPerformed(evt);
            }
        });

        btnCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icon/copiar.png"))); // NOI18N
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        labelTelefono1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelTelefono1.setText("Direción: ");

        tfDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDireccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelCedula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCopiar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelNombre)
                        .addGap(8, 8, 8)
                        .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelTelefono1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDireccion))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelTelefono)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelTelefono1)
                        .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombre)
                            .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelTelefono)
                                .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelCedula)
                                .addComponent(tfCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCopiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelOperaciones.setBackground(new java.awt.Color(242, 242, 242));
        panelOperaciones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18))); // NOI18N
        panelOperaciones.setAlignmentX(1.0F);

        btnAgregar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOperacionesLayout = new javax.swing.GroupLayout(panelOperaciones);
        panelOperaciones.setLayout(panelOperacionesLayout);
        panelOperacionesLayout.setHorizontalGroup(
            panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOperacionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOperacionesLayout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOperacionesLayout.createSequentialGroup()
                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar)))
                .addContainerGap())
        );
        panelOperacionesLayout.setVerticalGroup(
            panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOperacionesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(panelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEditar))
                .addGap(25, 25, 25))
        );

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabla", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        tabla.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Nombre", "Telefono", "Dirección"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setToolTipText("");
        tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panelOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(labelMenuClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelMenuClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelOperaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void agregar(){
         try(var manager = new DBManager()) {
            if(!tfCedula.getText().equals("") && !tfNombre.getText().equals("") && !tfTelefono.getText().equals("")){
                boolean existe = false;
                List<List<String>> listasClientes = manager.getInfoClientes();
                for (List<String> cliente : listasClientes) {
                    if(cliente.get(0).equals(tfCedula.getText())){
                        existe = true;
                    }
                }
                if (!existe) {
                    manager.agregarCliente(tfCedula.getText(),tfNombre.getText(), tfTelefono.getText(), tfDireccion.getText());
                    rellenoTabla();
                    JOptionPane.showMessageDialog(this,"Cliente Agregado Correctamente");  
                } else{
                    JOptionPane.showMessageDialog(this,"Ya existe un cliente con esta cédula","Error",JOptionPane.ERROR_MESSAGE);
                }
                
            } else{
              JOptionPane.showMessageDialog(this,"Debe llenar todos los campo","Error",JOptionPane.ERROR_MESSAGE);
            }
              
                 
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }
    }
    
    public void eliminar(){
        try(var manager = new DBManager()) {
            List<List<String>> ordenes = manager.getInfoOrdenes();
            boolean existeOrden = false;
            for (List<String> orden : ordenes) {
                if(orden.get(2).equals(tfCedula.getText())){
                    existeOrden = true;
                }
            }
            if (!existeOrden) {
                manager.eliminarCliente(tfCedula.getText());
                JOptionPane.showMessageDialog(this,"Cliente eliminado Correctamente");
                rellenoTabla();
            } else {
                JOptionPane.showMessageDialog(this,"No se pueden borrar clientes con ordenes registradas","Error",JOptionPane.ERROR_MESSAGE);                
            } 
            
                        
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }
    
    }
    
    private void buscar(){
        
        try(var manager = new DBManager()) {
            List<List<String>> clientes = manager.getInfoClientes();
            modelo = (DefaultTableModel) tabla.getModel();
            
            if(tfCedula.getText().equals("") && tfNombre.getText().equals("") && tfTelefono.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Debe llenar algún campo","Error",JOptionPane.ERROR_MESSAGE);
            } else if(!tfCedula.getText().equals("") && !tfNombre.getText().equals("") && !tfTelefono.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Solo debe haber 1 campo lleno","Error",JOptionPane.ERROR_MESSAGE);
            } else{
               if(!tfCedula.getText().equals("") && tfNombre.getText().equals("") && tfTelefono.getText().equals("")){ 
                   modelo.setRowCount(0);
                   for (List<String> cliente : clientes) {
                    if (cliente.get(0).startsWith(tfCedula.getText())){
                        modelo.addRow(new Object[]{cliente.get(0), cliente.get(1), cliente.get(2)});
                    }    
                }  
                
            } else if(tfCedula.getText().equals("") && !tfNombre.getText().equals("")&& tfTelefono.getText().equals("")){
                modelo.setRowCount(0);
                for (List<String> cliente : clientes) {
                    if (cliente.get(1).startsWith(tfNombre.getText())){
                        modelo.addRow(new Object[]{cliente.get(0), cliente.get(1), cliente.get(2)});
                    }    
                } 
            } else if(tfCedula.getText().equals("") && tfNombre.getText().equals("") && !tfTelefono.getText().equals("")){
                modelo.setRowCount(0);
                for (List<String> cliente : clientes) {
                    if (cliente.get(2).startsWith(tfTelefono.getText())){
                        modelo.addRow(new Object[]{cliente.get(0), cliente.get(1), cliente.get(2)});
                    }    
                }
            } 
            }
              
                 
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }
        
    }
    
    private void actualizar(){
        
        try(var manager = new DBManager()) {
            
            boolean resp = manager.actualizarCliente(tfCedula.getText(), tfNombre.getText(), tfTelefono.getText(), tfDireccion.getText());
            if (resp) {
                
                rellenoTabla();
                JOptionPane.showMessageDialog(this,"Cliente Actualizado Correctamente");    
                
            } else {
                JOptionPane.showMessageDialog(this,"Error al Actualizado cliente","Error",JOptionPane.ERROR_MESSAGE);
                               
            }            
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }  
    }
    
    private void rellenoTabla(){
        try(var manager = new DBManager()) {
            List<List<String>> clientes = manager.getInfoClientes();
            
            modelo = (DefaultTableModel) tabla.getModel();
            modelo.setRowCount(0);
            for (List<String> cliente : clientes) {
                modelo.addRow(new Object[]{cliente.get(0), cliente.get(1), cliente.get(2), cliente.get(3)});
            }   
                
            
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }
        
    }
    private void tfCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCedulaActionPerformed

    private void tfTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTelefonoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        tfCedula.setText("");
        tfNombre.setText("");
        tfTelefono.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int filaSeleccionada = tabla.getSelectedRow();
        if (filaSeleccionada != -1) { 
            String cedula = tabla.getValueAt(filaSeleccionada, 0).toString();
            String nombre = tabla.getValueAt(filaSeleccionada, 1).toString();
            String telefono = tabla.getValueAt(filaSeleccionada, 2).toString();
            String direccion = tabla.getValueAt(filaSeleccionada, 3).toString();
            tfCedula.setText(cedula);
            tfTelefono.setText(telefono);
            tfNombre.setText(nombre);
            tfDireccion.setText(direccion);
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        rellenoTabla();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        String contenido = tfCedula.getText();
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection stringSelection = new StringSelection(contenido);
        clipboard.setContents(stringSelection, null);
        JOptionPane.showMessageDialog(null, "Contenido copiado al portapapeles.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnCopiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(!tfCedula.getText().equals("")){
            eliminar();
        } else{
            JOptionPane.showMessageDialog(this,"Debe llenar el campo de cédula","Error",JOptionPane.ERROR_MESSAGE);
        }
            // TODO add your handling code here:{
            
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int filaSeleccionada = tabla.getSelectedRow();
        if (filaSeleccionada != -1) { 
            
            String cedula = tabla.getValueAt(filaSeleccionada, 0).toString();
            String nombre = tabla.getValueAt(filaSeleccionada, 1).toString();
            String telefono = tabla.getValueAt(filaSeleccionada, 2).toString();
            String direccion = tabla.getValueAt(filaSeleccionada, 3).toString();
            
            if(!tfCedula.getText().equals("") && !tfNombre.getText().equals("") && !tfTelefono.getText().equals("") && !tfDireccion.getText().equals("") ){
                if(tfCedula.getText().equals(cedula)){  
                    if(!tfNombre.getText().equals(nombre) || !tfTelefono.getText().equals(telefono) || !tfDireccion.getText().equals(direccion)){
                       actualizar();
                       rellenoTabla(); 
                    } else{
                        JOptionPane.showMessageDialog(this,"Debe hacer algun cambio","Error",JOptionPane.ERROR_MESSAGE);
                    }
                } 
                else{
                    JOptionPane.showMessageDialog(this,"La cedula no puede cambiarse","Error",JOptionPane.ERROR_MESSAGE);
                }
            } 
            
            else{
                JOptionPane.showMessageDialog(this,"Debe llenar todos los campos","Error",JOptionPane.ERROR_MESSAGE);
            }
            
        } else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una celda","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tfDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDireccionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCopiar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCedula;
    private javax.swing.JLabel labelMenuClientes;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelTelefono;
    private javax.swing.JLabel labelTelefono1;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelOperaciones;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField tfCedula;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTelefono;
    // End of variables declaration//GEN-END:variables
}
